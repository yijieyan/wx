<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="shortcut icon" href="/images/favicon.ico" >
    <title><%=title%></title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
</head>
<body>

<div id="pic"></div>
<div>
    <h1><%=title%></h1>
    <section>
        <img src="<%=poster%>"/>
       <p>
           <%=rate%>/
           <% for(var i= 0; i< type.length; i++) {%>
           <%=type[i] %>
           <%}%>
       </p>
       <p>
           主演
           <% for(var i= 0;i< casts.length; i++) {%>
           <%= casts[i]%>
           <%}%>
       </p>

    </section>
    <p id="summary">
        <%= summary%>
    </p>
</div>
<script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"></script>
<script src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
<script type="text/javascript">

    function ajax(url, type, data) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: url,
                type: type,
                data: data,
                dataType: 'json',
                success: function (data) {
                    resolve(data);
                },
                error: function (err) {
                    reject(err);
                }
            })
        })
    }


    function Base64() {

        // private property
        _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

        // public method for encoding
        this.encode = function (input) {
            var output = "";
            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
            var i = 0;
            input = _utf8_encode(input);
            while (i < input.length) {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);
                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;
                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }
                output = output +
                    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
                    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
            }
            return output;
        }

        // public method for decoding
        this.decode = function (input) {
            var output = "";
            var chr1, chr2, chr3;
            var enc1, enc2, enc3, enc4;
            var i = 0;
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (i < input.length) {
                enc1 = _keyStr.indexOf(input.charAt(i++));
                enc2 = _keyStr.indexOf(input.charAt(i++));
                enc3 = _keyStr.indexOf(input.charAt(i++));
                enc4 = _keyStr.indexOf(input.charAt(i++));
                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;
                output = output + String.fromCharCode(chr1);
                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }
            }
            output = _utf8_decode(output);
            return output;
        }

        // private method for UTF-8 encoding
        _utf8_encode = function (string) {
            string = string.replace(/\r\n/g, "\n");
            var utftext = "";
            for (var n = 0; n < string.length; n++) {
                var c = string.charCodeAt(n);
                if (c < 128) {
                    utftext += String.fromCharCode(c);
                } else if ((c > 127) && (c < 2048)) {
                    utftext += String.fromCharCode((c >> 6) | 192);
                    utftext += String.fromCharCode((c & 63) | 128);
                } else {
                    utftext += String.fromCharCode((c >> 12) | 224);
                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                    utftext += String.fromCharCode((c & 63) | 128);
                }

            }
            return utftext;
        }

        // private method for UTF-8 decoding
        _utf8_decode = function (utftext) {
            var string = "";
            var i = 0;
            var c = c1 = c2 = 0;
            while (i < utftext.length) {
                c = utftext.charCodeAt(i);
                if (c < 128) {
                    string += String.fromCharCode(c);
                    i++;
                } else if ((c > 191) && (c < 224)) {
                    c2 = utftext.charCodeAt(i + 1);
                    string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                    i += 2;
                } else {
                    c2 = utftext.charCodeAt(i + 1);
                    c3 = utftext.charCodeAt(i + 2);
                    string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    i += 3;
                }
            }
            return string;
        }
    }

    let url = location.href.split('#')[0];

    ajax('/movie/signature', 'get', {targetUrl: encodeURIComponent(url)})
        .then(function (data) {
            wx.config({
                debug: false,
                appId: data.appId,
                timestamp: data.timestamp,
                nonceStr: data.nonceStr,
                signature: data.signature,
                jsApiList: ['chooseImage', 'previewImage', 'uploadImage', 'downloadImage', 'startRecord', 'stopRecord', 'uploadVoice', 'translateVoice', 'scanQRCode', 'onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareQQ', 'onMenuShareQZone']
            });

            wx.ready(function () {
                console.log('successful!');
                wx.checkJsApi({
                    jsApiList: ['chooseImage', 'previewImage', 'uploadImage', 'downloadImage', 'startRecord', 'stopRecord', 'uploadVoice', 'translateVoice', 'scanQRCode', 'onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareQQ', 'onMenuShareQZone'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
                    success: function (res) {
                        $('#scan').click(function () {
                            wx.scanQRCode({
                                needResult: 1,
                                scanType: ["qrCode", "barCode"],
                                success: function (res) {
                                    var result = res.resultStr;
                                    $('#result').text(result);
                                }
                            });
                        })


//                         分享给微信好友
                        wx.onMenuShareAppMessage({
                            title: '<%=title%>', // 分享标题
                            desc: '<%=summary%>', // 分享描述
                            link: `http://yijie123.free.ngrok.cc/movie?id=${id}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                            imgUrl: '<%=poster%>', // 分享图标
                            type: '', // 分享类型,music、video或link，不填默认为link
                            dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空
                            success: function () {
                                window.alert('分享成功');
                            },
                            cancel: function () {
                                window.alert('您取消了分享');
                            }
                        });

//                         分享到朋友圈
                        wx.onMenuShareTimeline({
                            title: '<%=title%>', // 分享标题
                            link: `http://yijie123.free.ngrok.cc/movie?id=${id}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                            imgUrl: '<%=poster%>', // 分享图标
                            success: function () {
                                window.alert('分享成功');
                            },
                            cancel: function () {
                                window.alert('您取消了分享');
                            }
                        })


//                         分享到QQ
                        wx.onMenuShareQQ({
                            title: '<%=title%>', // 分享标题
                            desc: '<%=summary%>', // 分享描述
                            link: `http://yijie123.free.ngrok.cc/movie?id=${id}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                            imgUrl: '<%=poster%>', // 分享图标
                            success: function () {
                                window.alert('分享成功');
                            },
                            cancel: function () {
                                window.alert('您取消了分享');
                            }
                        });

//                         分享微博
                        wx.onMenuShareWeibo({
                            title: '<%=title%>', // 分享标题
                            desc: '<%=summary%>', // 分享描述
                            link: `http://yijie123.free.ngrok.cc/movie?id=${id}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                            imgUrl: '<%=poster%>', // 分享图标
                            success: function () {
                                window.alert('分享成功');
                            },
                            cancel: function () {
                                window.alert('您取消了分享');
                            }
                        });

//                         分享QQ空间
                        wx.onMenuShareQZone({
                            title: '<%=title%>', // 分享标题
                            desc: '<%=summary%>', // 分享描述
                            link: `http://yijie123.free.ngrok.cc/movie?id=${id}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                            imgUrl: '<%=poster%>', // 分享图标
                            success: function () {
                                window.alert('分享成功');
                            },
                            cancel: function () {
                                window.alert('您取消了分享');
                            }
                        });


                        $('#choseImage').click(function () {
                            wx.chooseImage({
                                count: 1, // 默认9
                                sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
                                sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
                                success: function (res) {
                                    var localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
//                                    $('#img').attr('src', localIds);
                                    wx.uploadImage({
                                        localId: localIds.toString(), // 需要上传的图片的本地ID，由chooseImage接口获得
                                        isShowProgressTips: 1, // 默认为1，显示进度提示
                                        success: function (res) {
                                            var serverId = res.serverId; // 返回图片的服务器端ID

                                            window.alert(`上传成功:${serverId}`)
                                            wx.downloadImage({
                                                serverId: serverId, // 需要下载的图片的服务器端ID，由uploadImage接口获得
                                                isShowProgressTips: 1, // 默认为1，显示进度提示
                                                success: function (res) {
                                                    var localId = res.localId; // 返回图片下载后的本地ID
                                                    window.alert(`下载成功:${localId}`)
                                                    $('#result').text(localId);
                                                    wx.getLocalImgData({
                                                        localId: localId, // 图片的localID
                                                        success: function (res) {
                                                            var localData = res.localData; // localData是图片的base64数据，可以用img标签显示
                                                            var base = new Base64();
                                                            var result = 'data:image/jpg;base64' + base.encode(localData);
                                                            window.alert(result)
                                                            $('#img').attr('src', result);
                                                        }
                                                    });

                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        })




                        var isStartRecord = false;
                        $('#record').click(function () {
                            if (!isStartRecord) {
                                isStartRecord = true;
                                wx.startRecord();
                            } else {
                                wx.stopRecord({
                                    success: function (res) {
                                        isStartRecord = false;
                                        var localId = res.localId;
                                        wx.translateVoice({
                                            localId: localId, // 需要识别的音频的本地Id，由录音相关接口获得
                                            isShowProgressTips: 1, // 默认为1，显示进度提示
                                            success: function (res) {
                                                window.alert(res.translateResult); // 语音识别的结果

                                                ajax('/movie/sendData', 'get', {text: '黑客帝国'}).then(function (ret) {
                                                    window.alert(JSON.stringify(ret))
                                                }).catch(function (err) {
                                                    window.alert(JSON.stringify(err));
                                                })

                                            }
                                        });
                                    }
                                });
                            }
                        })


                    }
                });
            });


        }).catch(function (err) {
        console.log(err);
    })


</script>
</body>
</html>
